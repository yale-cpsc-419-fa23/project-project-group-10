{"ast":null,"code":"var _jsxFileName = \"/Users/jessicale/Documents/GitHub/project-project-group-10/react/src/components/pages/researcher/gcal.js\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { SessionContextProvider, useSessionContext, useSession, useSupabaseClient } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState } from 'react';\n// import './calendar.css';\n\nfunction Calendar() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [event, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null);\n  }\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: ['https://www.googleapis.com/auth/calendar'],\n        redirectURI: 'https://localhost:3000/researcher-calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging into Google provider with Supabase\", error);\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n  console.log(session);\n  console.log(start);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"400px\",\n      margin: \"30px auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, session ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Hey there \", session.user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Start of your event\"), /*#__PURE__*/React.createElement(DateTimePicker, {\n    onChange: setStart,\n    value: start,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"End of your event\"), /*#__PURE__*/React.createElement(DateTimePicker, {\n    onChange: setEnd,\n    value: end,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Event name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setEventName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Event description\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setEventDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => createCalendarEvent(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Create Calendar Event\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => signOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Sign Out\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => googleSignIn(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Sign In With Google\"))));\n}\nexport default Calendar;","map":{"version":3,"names":["ReactDOM","React","createClient","SessionContextProvider","useSessionContext","useSession","useSupabaseClient","DateTimePicker","useState","Calendar","session","supabase","isLoading","start","setStart","Date","end","setEnd","event","setEventName","eventDescription","setEventDescription","createElement","Fragment","googleSignIn","error","auth","signInWithOAuth","provider","options","scopes","redirectURI","alert","console","log","signOut","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","width","margin","user","email","onChange","value","type","e","target","onClick","createCalendarEvent"],"sources":["/Users/jessicale/Documents/GitHub/project-project-group-10/react/src/components/pages/researcher/gcal.js"],"sourcesContent":["import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport { SessionContextProvider, useSessionContext, useSession, useSupabaseClient } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport {useState} from 'react';\n// import './calendar.css';\n\n\nfunction Calendar(){\n    const session = useSession();\n    const supabase = useSupabaseClient();\n    const { isLoading } = useSessionContext();\n    const [start, setStart ] = useState(new Date());\n    const [end, setEnd ] = useState(new Date());\n    const [event, setEventName ] = useState(\"\");\n    const [eventDescription, setEventDescription ] = useState(\"\");\n\n    if(isLoading) {\n        return <></>\n    }\n\n    async function googleSignIn(){\n        const { error } = await supabase.auth.signInWithOAuth({\n            provider: 'google',\n            options: {\n                scopes: ['https://www.googleapis.com/auth/calendar'],\n                redirectURI: 'https://localhost:3000/researcher-calendar'\n            }\n        });\n        if(error) {\n            alert(\"Error logging into Google provider with Supabase\", error)\n            console.log(error);\n        }\n    }\n\n    async function signOut(){\n        await supabase.auth.signOut();\n    }\n    console.log(session);\n    console.log(start);\n\n    return(\n        <div className=\"App\">\n      <div style={{width: \"400px\", margin: \"30px auto\"}}>\n        {session ?\n          <>\n            <h2>Hey there {session.user.email}</h2>\n            <p>Start of your event</p>\n            <DateTimePicker onChange={setStart} value={start} />\n            <p>End of your event</p>\n            <DateTimePicker onChange={setEnd} value={end} />\n            <p>Event name</p>\n            <input type=\"text\" onChange={(e) => setEventName(e.target.value)} />\n            <p>Event description</p>\n            <input type=\"text\" onChange={(e) => setEventDescription(e.target.value)} />\n            <hr />\n            <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n            <p></p>\n            <button onClick={() => signOut()}>Sign Out</button>\n          </>\n          :\n          <>\n            <button onClick={() => googleSignIn()}>Sign In With Google</button>\n          </>\n        }\n      </div>\n    </div>\n\n    );\n}\n\nexport default Calendar;"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,sBAAsB,EAAEC,iBAAiB,EAAEC,UAAU,EAAEC,iBAAiB,QAAQ,8BAA8B;AACvH,OAAOC,cAAc,MAAM,uBAAuB;AAClD,SAAQC,QAAQ,QAAO,OAAO;AAC9B;;AAGA,SAASC,QAAQA,CAAA,EAAE;EACf,MAAMC,OAAO,GAAGL,UAAU,CAAC,CAAC;EAC5B,MAAMM,QAAQ,GAAGL,iBAAiB,CAAC,CAAC;EACpC,MAAM;IAAEM;EAAU,CAAC,GAAGR,iBAAiB,CAAC,CAAC;EACzC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAE,GAAGN,QAAQ,CAAC,IAAIO,IAAI,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAE,GAAGT,QAAQ,CAAC,IAAIO,IAAI,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACG,KAAK,EAAEC,YAAY,CAAE,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE7D,IAAGI,SAAS,EAAE;IACV,oBAAOX,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAAsB,QAAA,MAAI,CAAC;EAChB;EAEA,eAAeC,YAAYA,CAAA,EAAE;IACzB,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAACC,eAAe,CAAC;MAClDC,QAAQ,EAAE,QAAQ;MAClBC,OAAO,EAAE;QACLC,MAAM,EAAE,CAAC,0CAA0C,CAAC;QACpDC,WAAW,EAAE;MACjB;IACJ,CAAC,CAAC;IACF,IAAGN,KAAK,EAAE;MACNO,KAAK,CAAC,kDAAkD,EAAEP,KAAK,CAAC;MAChEQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IACtB;EACJ;EAEA,eAAeU,OAAOA,CAAA,EAAE;IACpB,MAAMxB,QAAQ,CAACe,IAAI,CAACS,OAAO,CAAC,CAAC;EACjC;EACAF,OAAO,CAACC,GAAG,CAACxB,OAAO,CAAC;EACpBuB,OAAO,CAACC,GAAG,CAACrB,KAAK,CAAC;EAElB,oBACIZ,KAAA,CAAAqB,aAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBzC,KAAA,CAAAqB,aAAA;IAAKqB,KAAK,EAAE;MAACC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAW,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/ChC,OAAO,gBACNT,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAAsB,QAAA,qBACEtB,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAU,EAAChC,OAAO,CAACoC,IAAI,CAACC,KAAU,CAAC,eACvC9C,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,qBAAsB,CAAC,eAC1BzC,KAAA,CAAAqB,aAAA,CAACf,cAAc;IAACyC,QAAQ,EAAElC,QAAS;IAACmC,KAAK,EAAEpC,KAAM;IAAAwB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpDzC,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBAAoB,CAAC,eACxBzC,KAAA,CAAAqB,aAAA,CAACf,cAAc;IAACyC,QAAQ,EAAE/B,MAAO;IAACgC,KAAK,EAAEjC,GAAI;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChDzC,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC,eACjBzC,KAAA,CAAAqB,aAAA;IAAO4B,IAAI,EAAC,MAAM;IAACF,QAAQ,EAAGG,CAAC,IAAKhC,YAAY,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACpEzC,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,mBAAoB,CAAC,eACxBzC,KAAA,CAAAqB,aAAA;IAAO4B,IAAI,EAAC,MAAM;IAACF,QAAQ,EAAGG,CAAC,IAAK9B,mBAAmB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC3EzC,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAK,CAAC,eACNzC,KAAA,CAAAqB,aAAA;IAAQ+B,OAAO,EAAEA,CAAA,KAAMC,mBAAmB,CAAC,CAAE;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,uBAA6B,CAAC,eAC5EzC,KAAA,CAAAqB,aAAA;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAAC,eACPzC,KAAA,CAAAqB,aAAA;IAAQ+B,OAAO,EAAEA,CAAA,KAAMlB,OAAO,CAAC,CAAE;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAgB,CAClD,CAAC,gBAEHzC,KAAA,CAAAqB,aAAA,CAAArB,KAAA,CAAAsB,QAAA,qBACEtB,KAAA,CAAAqB,aAAA;IAAQ+B,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAAC,CAAE;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qBAA2B,CAClE,CAED,CACF,CAAC;AAGV;AAEA,eAAejC,QAAQ"},"metadata":{},"sourceType":"module"}